<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Jesse Cravens]]></title>
  <link href="http://jessecravens.com/atom.xml" rel="self"/>
  <link href="http://jessecravens.com/"/>
  <updated>2012-10-15T20:59:53-05:00</updated>
  <id>http://jessecravens.com/</id>
  <author>
    <name><![CDATA[Jesse Cravens]]></name>
    <email><![CDATA[jesse.cravens@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Upcoming Talk at Devcon5-Austin: Rapid Prototyping HTML5 Applications with NodeJS]]></title>
    <link href="http://jessecravens.com/blog/2012/09/25/upcoming-talk-at-devcon5-austin-rapid-prototyping-html5-applications-with-nodejs/"/>
    <updated>2012-09-25T21:50:00-05:00</updated>
    <id>http://jessecravens.com/blog/2012/09/25/upcoming-talk-at-devcon5-austin-rapid-prototyping-html5-applications-with-nodejs</id>
    <content type="html"><![CDATA[<p>I&#8217;m getting ready for an upcoming talk titled: Rapid Prototyping HTML5 Applications with NodeJS, which I will presenting at <a href="http://www.html5report.com/conference/austin2012/Agenda/Agenda-at-a-glance.aspx">Devcon 5 - Austin</a>.</p>

<p>Here is a brief summary:</p>

<p>With HTML5, the modern web browser continues to mature as a capable application platform.
The new specifications are broad, impacting nearly every technology associated with modern web development including graphics, connectivity, client-side storage, offline access, graphics, multimedia, and performance.
JavaScript continues to be front and center as the core language. NodeJS extends JavaScript&#8217;s event loop paradigm to the server, and provides JavaScript engineers with the ability to produce functionality deeper in the software stack. This phenomenon has had an impact on types of software development ranging from full-scale, enterprise, mobile applications to robot hobbyists platforms.
See innovative example solutions and learn why NodeJS is an ideal development platform for the production acceleration of next-generation HTML5 applications.</p>

<p>This is the beginning of a transition for me. With the release of HTML5 Hacks, I&#8217;m beginning to focus more on my ubiquitous JavaScript content. I&#8217;m excited, I have a lot to share.</p>

<p>Look for an update with a web based version of the slides.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Just moved HTML5 Hacks into Copy/Edit]]></title>
    <link href="http://jessecravens.com/blog/2012/09/24/just-moved-html5-hacks-into-copy-slash-edit/"/>
    <updated>2012-09-24T21:57:00-05:00</updated>
    <id>http://jessecravens.com/blog/2012/09/24/just-moved-html5-hacks-into-copy-slash-edit</id>
    <content type="html"><![CDATA[<p>After a marathon of hackery starting in April, <a href="http://www.oreillynet.com/pub/au/5370">Jeff Burtoft</a> and I pushed out 90 hacks and 435 pages of <a href="http://shop.oreilly.com/product/0636920026273.do">HTML5 Hacks</a> this week. We also had a few guest hackers that created some really great content as well.</p>

<ul>
<li>Raymond Camden of Adobe</li>
<li>Phil Legetter of Pusher.com</li>
<li>Alexander Schulze of jWebsocket</li>
<li><a href="http://j.hn/">John Dyer</a> of Dallas Theological Seminary</li>
<li>Alex Sirota of FoxyTunes</li>
</ul>


<p>Overall, it was a great experience. What I enjoyed the most was getting into a workflow groove, much like when you are building an API or contributing to a project. With each hack, it was necessary to ideate, plan, create the code, test it, and then put it into a understandable format. By the end, I was feeling pretty efficient at kicking out interesting hacks pretty quickly.</p>

<p>I felt as though I improved over time, looking back is always interesting. I like to keep fine tuning and revising, but at some point you have to ship the product. I&#8217;m really proud of the work, it has been hard, but I learned a ton in the process.</p>

<p>Most of my hacks I tried to make relevant to real world software development challenges, and mix in a number of HTML5 specifications. Hopefully, that turns out to benefit the reader &#8230; I&#8217;m all ears on the feedback. So don&#8217;t hesitate to drop us a line.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migration from Drupal to Octopress]]></title>
    <link href="http://jessecravens.com/blog/2012/09/23/migration-from-drupal-to-octopress/"/>
    <updated>2012-09-23T13:39:00-05:00</updated>
    <id>http://jessecravens.com/blog/2012/09/23/migration-from-drupal-to-octopress</id>
    <content type="html"><![CDATA[<h2>Why?</h2>

<p>For the last 6 years, I have hosted my personal blog using Drupal at bluehost.com, and I finally have made the decision to migrate.</p>

<p>I have been using Ruby on Rails, Sinatra, and Node.js for prototypes, demos, web-based presentations, and production apps, and deploying to Heroku for the past couple of years. The productivity gains and integration with github and social media, have brought me to the point that I&#8217;d prefer for my workflow for blogging, updating to my microformats resume and portfolios to be similar to how I create and manage my other content.</p>

<p>So here, it is. Once I have written a proper migration script, and taken care of all the custom urls, I&#8217;ll post my solution here.</p>

<p>UPDATE:</p>

<div><script src='https://gist.github.com/3895430.js?file='></script>
<noscript><pre><code># inspired by: http://www.infovore.info/blog/2011/09/24/octopress-setup-and-drupal-migration/
# simplified to be dropped in your root Octopress app directory, along with an export (.sql) of your mysql db.

###### Creates post in this basic format ######

#  ---
#  layout: post
#  title: #{title}
#  date: #{time}
#  comments: true
#  categories: #{tag_list}
#  ---       
#  content

################################################


  require 'rubygems'
  require 'sequel'
  require 'fileutils'
  require 'yaml'


        puts &quot;Building refresh layout&quot;
        File.open(&quot;source/_layouts/refresh.html&quot;, &quot;w&quot;) do |f|
        f.puts &lt;&lt;EOF    
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;
&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url={{ page.refresh_to_post_id }}.html&quot; /&gt;
&lt;/head&gt;
&lt;/html&gt;
EOF
        end

        DB = Sequel.connect(:adapter =&gt; 'mysql', :user =&gt; 'root', :host =&gt; 'localhost', :database =&gt; 'jessecra',:password=&gt;'frog')
        puts DB.tables

        QUERY = &quot;select  node.nid, node.title, node_revisions.body, node.created, node.status, f.name as format, u.dst \
             from node \
                  join node_revisions on node.vid = node_revisions.vid \
                  join filter_formats f on node_revisions.format = f.format \
                  left join url_alias u on concat('node/', node.nid) = u.src \
             where (node.type = 'blog' OR node.type = 'story' OR node.type = 'article')&quot;

         DB[QUERY].each do |post|

            # Get required fields and construct Jekyll compatible name
            node_id = post[:nid]
            # puts node_id
            title = post[:title]
            puts title
            content = post[:body]
            # puts content
            created = post[:created]
            format = post[:format].strip.downcase == 'textile' ? 'textile' : 'markdown'
            dst  = post[:dst] || nil
            time = Time.at(created)
            is_published = post[:status] == 1
            published = is_published ? nil : false
            dir = &quot;source&quot;
            posts_dir = &quot;#{dir}/_posts&quot;
            slug = title.strip.downcase.gsub(/(&amp;|&amp;amp;)/, ' and ').gsub(/[\s\.\/\\]/, '-').gsub(/[^\w-]/, '').gsub(/[-_]{2,}/, '-').gsub(/^[-_]/, '').gsub(/[-_]$/, '')
            name = time.strftime(&quot;%Y-%m-%d-&quot;) + slug + '.' + format
            # puts name

            tag_query = &quot;select distinct node.nid, type, td.name \
                         from node \
                              join term_node tn on node.nid = tn.nid \
                              join term_data td on tn.tid = td.tid \
                         where node.nid = #{node_id} order by node.nid&quot;
            tags = []
            DB[tag_query].each do |tag|
              stripped_tag = tag[:name].gsub /&quot;/, '|'
              tags.push stripped_tag
            end
            tag_list = tags.length == 0 ? nil : tags
            
            puts tag_list

            # Write out the data and content to file
            File.open(&quot;#{posts_dir}/#{name}&quot;, &quot;w&quot;) do |f|
              f.puts &quot;---&quot;
              f.puts &quot;layout: post&quot;
              f.puts &quot;title: \&quot;#{title}\&quot;&quot; 
              f.puts &quot;date: #{time}&quot; 
              f.puts &quot;comments: true&quot;
              f.puts &quot;categories: #{tag_list}&quot;
              f.puts &quot;---&quot;
              f.puts content
            end

            # Make a file to redirect from the old Drupal URL
            if is_published
              FileUtils.mkdir_p(dir + &quot;/node/#{node_id}&quot;)
              File.open(dir + &quot;/node/#{node_id}/index.md&quot;, &quot;w&quot;) do |f|
                f.puts &quot;---&quot;
                f.puts &quot;layout: refresh&quot;
                f.puts &quot;refresh_to_post_id: /blog/#{time.strftime(&quot;%Y/%m/%d/&quot;) + slug}/index&quot;
                f.puts &quot;---&quot;
              end
              if dst
                FileUtils.mkdir_p(&quot;#{dir}/#{dst}&quot;)
                File.open(&quot;#{dir}/#{dst}/index.md&quot;, &quot;w&quot;) do |f|
                  f.puts &quot;---&quot;
                  f.puts &quot;layout: refresh&quot;
                  f.puts &quot;refresh_to_post_id: /blog/#{time.strftime(&quot;%Y/%m/%d/&quot;) + slug}/index&quot;
                  f.puts &quot;---&quot;
                end
              end
            end
          end</code></pre></noscript></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript Modules]]></title>
    <link href="http://jessecravens.com/blog/2012/06/17/javascript-modules/"/>
    <updated>2012-06-17T16:23:21-05:00</updated>
    <id>http://jessecravens.com/blog/2012/06/17/javascript-modules</id>
    <content type="html"><![CDATA[<p>For a talk last March at USAA&#8217;s internal Tech X conference, I put together a demo of JavaScript script loaders, module definitions, dependency management, and polyfill support: <a href="http://jessecravens.github.com/js-modules-demo">JavaScript Modules</a>.</p>


<p><a href="http://jessecravens.github.com/js-modules-demo/"><img class="imgL" width="500px" src="http://jessecravens.com/images/blogposts/js-modules.png"></a></p>

<p>This demonstrates the following Module Definitions:</p>




<ul>
<li>AMD</li>
<li>CommonJS</li>
<li>YUI3</li>
<li>JS Harmony</li>
</ul>




<p>And a few script loaders:</p>




<ul>
<li>RequireJS</li>
<li>yepnope</li>
<li>YUI3 - YUI Loader</li>
</ul>




<p>If you want to know more about the state of modules, dependency loading and management in the JavaScript world, there is always room for more contributors, just fork or clone the project &#8230; and you will have a playground to begin playing with some of the most popular implementations.</p>


<p>To learn more, check it out here: <a href="http://jessecravens.github.com/js-modules-demo/">jessecravens.github.com/js-modules-demo</a></p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Robodeck]]></title>
    <link href="http://jessecravens.com/blog/2012/05/22/robodeck/"/>
    <updated>2012-05-22T10:01:42-05:00</updated>
    <id>http://jessecravens.com/blog/2012/05/22/robodeck</id>
    <content type="html"><![CDATA[<p>Awhile back, I built a websocket powered interactive presentation framework called <a href="https://github.com/jessecravens/robodeck">Robodeck</a>.</p>


<p>The solution uses the following technologies:</p>




<ul>
<li>Node.js</li>
<li>Socket.io</li>
<li>WebSockets</li>
<li>GeoLocatin APIs</li>
<li>Deck.js</li>
</ul>




<p>To name a few.</p>


<p>To learn more, check it out here: <a href="http://jessecravens.github.com/robodeck">http://jessecravens.github.com/robodeck</a></p>


<p><a href="http://jessecravens.github.com/robodeck"><img class="imgL" width="500px" src="http://jessecravens.com/images/blogposts/robodeck.png"></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hack #99: Using Stylus’ Transparent Mixins to Hack Vendor-Specific Properties]]></title>
    <link href="http://jessecravens.com/blog/2012/04/22/hack-99-using-stylus-transparent-mixins-to-hack-vendor-specific-properties/"/>
    <updated>2012-04-22T19:11:35-05:00</updated>
    <id>http://jessecravens.com/blog/2012/04/22/hack-99-using-stylus-transparent-mixins-to-hack-vendor-specific-properties</id>
    <content type="html"><![CDATA[<div class="">

<p>This post is mirrored at: <a href="http://html5hacks.com/hack/web-workers/hack-82-web-wokers-basics-web-browsers-ui-thread">html5hacks.com</a></p>


<p>One of the most interesting features of <a href="https://github.com/LearnBoost/stylus">Stylus</a> is transparent Mixins. One reason they are interesting is that at the time of this writing, this feature is exclusive to Stylus, other CSS metalanguages like Less and Sass do not offer Transparent Mixin support. </p></p>

<p>We already defined a mixin earlier, when we explored mixins with Jade. Here they are used similarly.</p>

<p>Before we begin with the transparent aspect of Stylus mixin support, let’s build a simple CSS mixin. Perhaps, the best example, as provided by TJ Holowaychuk in this beginner screencast: http://www.screenr.com/bNY uses vendor-specific prefixes. </p>

<p>How about we take his example and expand it to a slightly more challenging scenario. </p>

<p>In case you haven’t come across this challenge before, lets set some context. Browser makers, or vendors, implement proprietary extensions to standard CSS specifications to release and test browser features that have been developed pre ‘Candidate Recommendation’ W3C draft status. Although vendor-specific prefixes can be frustrating for web developers, they are a necessary evil, allowing new properties to be widely tested before they become available as standard CSS properties.</p>

<p>Each Vendor maintains a list of their proprietary CSS properties. The following table provides the extension prefixes for all the modern browsers:</p>

<p>Extension Rendering Engine Browser(s) Example -moz- Mozilla Firefox, Camino -moz-border-radius -ms- Trident Internet Explorer -ms-layout-grid -o- Presto Opera -o-border-radius -webkit- Webkit Chrome, Safari -webkit-border-radius</p>

<table border="1">
<tr>
<th>Extension</th>
<th>Rendering Engine</th>
<th>Browser(s)</th>
<th>Example</th>
</tr>
<tr>
<td>-moz-</td>
<td>Camino</td>
<td>Mozilla Firefox</td>
<td>-moz-border-radius</td>
</tr>
<tr>
<td>-ms-</td>
<td>Trident</td>
<td>Internet Explorer</td>
<td>-ms-layout-grid</td>
</tr>
<tr>
<td>-o-</td>
<td>Presto</td>
<td>Opera</td>
<td>-o-border-radius</td>
</tr>
<tr>
<td>-webkit-</td>
<td>Webkit</td>
<td>Chrome, Safari</td>
<td>-webkit-border-radius</td>
</tr>
</table>

<p>And here is a few valuable resources for finding these properties.</p>
<ul>
<li>Webkit (unofficial at css-infos.net) : http://css-infos.net/properties/webkit</li> 

<li>Safari: http://developer.apple.com/library/safari/#documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-SW1</li>

<li>Mozilla: https://developer.mozilla.org/en/CSS_Reference/Mozilla_Extensions</li>

<li>Opera: http://www.opera.com/docs/specs/presto28/css/o-vendor/</li>

<li>Internet Explorer: http://blogs.msdn.com/b/ie/archive/2008/09/08/microsoft-css-vendor-extensions.aspx</li>
</ul>

<p>Without a metalanguage that provides logic to CSS, these declarations can become cumbersome and repetitive. Here is an example of a div element that needs to have corners take on different size radiuses:</p>

<p>First, the markup in Jade.</p>

<pre class="brush: html; ruler: true; first-line: 1; highlight: [0]">
header
  h1= title
  p Welcome to #{title}

div.panel panel test
div.mixin-panel mixin-panel test
div.t-mixin-panel transparent-mixin-panel test
</pre>

<p>Then, the styles in basic CSS.</p>


<pre class="brush: css; ruler: true; first-line: 1; highlight: [0]">
div.panel {
  -moz-border-radius: 10px 5px;
  -webkit-border-radius: 10px 5px;
  border-radius: 10px 5px;
}
</pre>

<p>This produces the following effect:</p>

<p>
<img src="http://html5hacks.com/sites/default/files/images/stylus-example265x185.png"/>
</p>

<p> With that context in mind, let’s leverage Stylus to help us manage our code. First, we are able to remove all parenthesis, semi-colons, and colons. </p>

<pre class="brush: css; ruler: true; first-line: 1; highlight: [0]">
div.panel
  -moz-border-radius 10px 5px
  -webkit-border-radius 10px 5px
  border-radius 10px 5px
</pre>

<p>Much like Jade, this simplified syntax goes along way in our ability to quickly write CSS. Now, let’s apply some logic, by creating a border-radius mixin, and pass our values as arguments to our mixin:</p>

<pre class="brush: css; ruler: true; first-line: 1; highlight: [0]">
my-border-radius-mixin (...args)
  -moz-border-radius args
  -webkit-border-radius args
  border-radius args

div.panel
  my-border-radius-mixin (10px 5px)

</pre>

<p>And we can reuse this mixin in other contexts, which continues to help reduce code bloat and keep your code DRY. </p>

<pre class="brush: css; ruler: true; first-line: 1; highlight: [0]">
my-border-radius-mixin (...args)
  -moz-border-radius args
  -webkit-border-radius args
  border-radius args

div.panel
  border-radius-mixin (10px 5px)

div.other-panel
  border-radius-mixin (3px 32px 100px 55px)

div.another-panel
  my-border-radius-mixin (5px 10px 33px 43px)

</pre>

<p> While Stylus allows us to name our mixin as we choose, we are also given the ability to apply mixins ‘transparently.’ In the case of a simple implementation of border-radius, a transparent mixin would make a lot of sense. In effect, this normalizes browser implementations and provides an abstraction layer for CSS developers. </p>

<pre class="brush: css; ruler: true; first-line: 1; highlight: [0]">
border-radius (...args)
  -moz-border-radius args
  -webkit-border-radius args
  border-radius args

div.panel
  border-radius 10px 5px

</pre>

<p>As long as a border-radius mixin is present, Stylus will find it, and apply the vendor-specific properties transparently. </p>

</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hack #82 Web Wokers: Basics of the Web Browser's UI Thread]]></title>
    <link href="http://jessecravens.com/blog/2011/12/11/hack-82-web-wokers-basics-of-the-web-browsers-ui-thread/"/>
    <updated>2011-12-11T11:08:01-06:00</updated>
    <id>http://jessecravens.com/blog/2011/12/11/hack-82-web-wokers-basics-of-the-web-browsers-ui-thread</id>
    <content type="html"><![CDATA[<div class="">

<p>This post is mirrored at: <a href="http://html5hacks.com/hack/web-workers/hack-82-web-wokers-basics-web-browsers-ui-thread">html5hacks.com</a></p>


<h2>Single Threadin&#8217;</h2>
<p>
As we set out to build a highly responsive UI for our demo web application, we must fully understand how browsers manage processes. Perhaps the biggest challenge we will face has to do with browsers using a single thread for both JavaScript execution and user interface updates. While the browser&#8217;s JavaScript interpreter is executing code, the UI is unable to respond to the user&#8217;s input. If a script is taking a long time to complete, after a specified amount of time the browser will provide the user an option to terminate the script. To accommodate for the &#8216;freeze&#8217; associated with scripts that exceed the browser execution time limit, web developers have traditionally created smaller units of work and used JavaScript timers to return execution to the next event in the queue. As you will see, web workers solve the locking of the UI thread by opening an additional thread, or even multiple threads, for execution of these long running, processor intensive tasks.</p>

<p>When designing your application, especially if you come from more of a &#8216;server-side&#8217; or Java background, it is important to understand that non-blocking execution is not the same as concurrent threading. While not extremely complex, JavaScript&#8217;s event driven style does take some getting used to for developers coming from other languages such as Java and C. Later, we will touch on a few examples where we pass a callback continuation function to take full advantage of JavaScript&#8217;s non blocking design.</p>


<h2>Thread Safety</h2>
<p>
Mozilla, in particular, provides a Worker interface which web workers implement. While the Worker interface spawns OS-level threads, web workers use the postMessage mechanism to send messages (with serializable objects) between the two execution contexts. To ensure thread safety the worker is only given access to thread safe components to include the following:</p>
<ul>
<li>timers: setTimeout() and setInterval() methods</li>
<li>XMLHttpRequest</li>
<li>importScripts() method</li>
</ul>
<p>The worker script can also make use of:</p>
<ul>
<li>navigator and location objects</li>
<li>native JavaScript objects such as Object, String, Date</li>
</ul>
<p>At the same time, the worker restricts access to DOM APIs, global variables, and the parent page. In Hack #84 Building the DOM with web workers and Handlebars.js, we will explore the restricted access to DOM APIs, and introduce JavaScript templating, importScripts, and the use of timers to poll for postMessage. </p>


<h2>HTML5 Web Workers</h2>
<p>As mentioned earlier, the Web worker spec defines an API for executing scripts in the background by spawning an independent execution context.</p>

<p>
It is important to note that web workers are costly, having an impact on startup and overall memory consumption. So, they are intended to be used lightly and in conjunction with the some of the asynchronous techniques mentioned earlier. A well built client-side application would typically make use of one or two cases where tasks are expensive. Here are a few common uses cases:
</p>

<ul>
   <li>Single Page Application bootstrapping large amounts of data during initial load</li>
   <li>Performing long running mathematical calculations in the browser</li>
   <li>Processing large JSON datasets</li>
   <li>Text formatting, spell checking, and syntax highlighting</li>
   <li>Processing multimedia data (Audio/Video)</li>
   <li>Long polling webservices</li>
   <li>Filtering images in canvas</li>
   <li>Calculating points for a 3D image</li>
   <li>Reading/Writing of local storage database</li>
</ul>

<h2>Long Running Scripts</h2>
<p>
Our first web worker hack will be a long running script with heavy computation. It will execute 2 loops that output a two-dimensional array. First, we will use this computation to lock up the browser&#8217;s UI thread, and later we will move the task to a worker. To further demonstrate the performance strain, we will also animate a box horizontally across the screen. You will notice the animated box stop while the UI thread is executing the long running script.</p>

<pre class="brush: js; ruler: true; first-line: 1; highlight: [0]">
    var box;

    function goRight() {
        box.style.left = parseInt(box.style.left)+1+'px';
        setTimeout(goRight,2); // call goRight in 200msec
    }

    function init() {
        var r = 1000;
        var c = 1000;
        var a = new Array(r);

        for (var i = 0; i < r; i++) {
            a[i] = new Array(c);

            for (var j = 0; j < c; j++) {
                a[i][j] = "[" + i + "," + j + "]";
            }
        }
        document.getElementById('result').textContent = a;
        
        box = document.getElementById('box'); // get the "box" object
        box.style.left = '0px'; // set its initial position to 0px
        
        goRight(); // start animating to the right
    }
    
    window.onload = init;
</pre>


<h2>Spawning a Worker</h2>

<p>Now let&#8217;s move our heavy computational task to a dedicated web worker, so that the user doesn&#8217;t have to wait for the script to complete execution in order to interact with user interface. First, lets spawn a new worker:</p>
<pre class="brush: js; ruler: true; first-line: 1; highlight: [0]">
  
  var worker = new Worker('highComp.js');

  worker.postMessage(JSON.stringify(message));

  worker.addEventListener('message', function(event){}, false);

</pre>

<p>Here, we define an external file that will contain the logic of our heavy computational task. The file, highComp.js will listen for a message that will receive the serialized JSON payload, and then we will set up an additional listener to receive a message back from highComp.js.</p>

<p>Now, we can move this cpu-intensive task to a separate file: highComp.js</p>

<pre class="brush: js; ruler: true; first-line: 1; highlight: [0]">
var r = 1000;
var c = 1000;

var a = new Array(r);

for (var i = 0; i < r; i++) {
  a[i] = new Array(c);

    for (var j = 0; j < c; j++) {
     a[i][j] = "[" + i + "," + j + "]";
    }
};
postMessage(a);
</pre>

<p>In highComp.js, our two dimensional array is built and set to variable a. It is then passed back to our main script via the postMessage call. </p>

<p>In the next hack, we will mix our use of timers with the power of a dedicated worker. As we send messages (passing serializable objects as a parameter to postMessage) back and forth to code running in the shared UI thread, our timer will periodically check for new messages and use their contents to modify the DOM.</p>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RVM (Ruby Version Manager) and Ruby On Rails]]></title>
    <link href="http://jessecravens.com/blog/2011/09/26/rvm-ruby-version-manager-and-ruby-on-rails/"/>
    <updated>2011-09-26T23:35:58-05:00</updated>
    <id>http://jessecravens.com/blog/2011/09/26/rvm-ruby-version-manager-and-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>Here is a brief overview of <a href="http://beginrescueend.com/">Ruby Version Manager</a> and some explanation as to why you would want to use it. I began to use RVM when I started my first Rails 3 project. It was a bit confusing at first, but now I couldn&#8217;t live without it. I have created numerous gemsets for various configurations to include different versions of Ruby (1.87 and 1.91), versions of Rails (2.3, 3.09, 3.1) and different projects that have vastly different gems such as different testing frameworks, different JavaScript libraries, and different ORMs.</p>




<p>This allows me to essentially sandbox each of these applications&#8217; dependencies.</p>




<p>One helpful hint I might offer is to get in the habit of declaring your gemset when you launch a new terminal. I tend to have multiple terminals open at once and it took me awhile to remember that each time I launched a terminal, RVM would fall back to my default gemset. So if I clone a Rails 3.1 project, I need to remember to switch to my rails3.1 gemset prior to runninig bundle install. </p>




<p>Simply put, RVM helps:</p>


<ol>
  <li>manage versions of Ruby</li>
  <li>manage packages of Gemsets</li>
</ol>




<h3>RUBY</h3>


<p>{syntaxhighlighter brush: ps}</p>

<p>$ rvm list
$ rvm install 1.9.2-head</p>

<p>{/syntaxhighlighter}</p>

<p>And, you can set a version as default</p>


<p>{syntaxhighlighter brush: ps}</p>

<p>$ rvm use 1.9.2-head &#8211;default</p>

<p>{/syntaxhighlighter}</p>

<h3>GEMSETS</h3>


<p>{syntaxhighlighter brush: ps}</p>

<h1>Start by creating our gemset(s):</h1>

<p>$  rvm gemset create rails309</p>

<h1>Or create multiple at a time:</h1>

<p>$  rvm gemset create rails307 rails31</p>

<h1>The result can be verified by listing the available gemsets:</h1>

<p>$  rvm gemset list</p>

<h1>See everything with list_all, this has been very useful:</h1>

<p>$ rvm gemset list_all</p>

<h1>If a gem’s name still leaves room for confusion, simply delete it and create a more meaningful one (e.g., rails31rc):</h1>

<p>$  rvm gemset delete rails31</p>

<p>{/syntaxhighlighter}</p>

<p>Now that we have multiple gemsets installed, we must first select the one we want to use, and we can also set it as the default gemset by passing it the —default flag:</p>


<p>  
{syntaxhighlighter brush: ps}</p>

<p>$ rvm use 1.9.2-head@rails309 &#8211;default</p>

<p>{/syntaxhighlighter}</p>

<h3>Installing Rails</h3>


<p>Installing rails is as easy as installing any other gem: we only need to specify it’s name, but we can always choose a specific version, or to speed up the installation process by skipping the documentation: </p>


<p>{syntaxhighlighter brush: ps}
$ gem install rails &#8211;no-rdoc &#8211;no-ri</p>

<h1>Or</h1>

<p>$ gem install rails [-v 3.0.7] [&#8211;no-rdoc &#8211;no-ri]</p>

<h1>Or</h1>

<p>$ gem install rails -v &#8220;>=3.1.0rc&#8221;
{/syntaxhighlighter}</p>

<h3>In Summary and Why Am I doing this?</h3>




<p>Rails is distributed as a gem, and there are conflicts between Rails 2 and Rails 3, so if you want to run multiple versions of Rails on the same system you need to create a separate gemset for each:</p>


<p>{syntaxhighlighter brush: ps}
$ rvm &#8211;create 1.8.7-p302@rails2app
$ rvm &#8211;create use 1.9.2@rails3app
{/syntaxhighlighter}</p>

<p>In other words, for application specific gemsets it is convenient to select the version of Ruby and the collection of gems by doing the following:</p>


<p>{syntaxhighlighter brush: ps}
$ rvm &#8211;create use 1.9.2@mongoid-app</p>

<h1>Also, which gemset am I using?</h1>

<p>$ rvm gemset name</p>

<p>$ rvm gemdir
{/syntaxhighlighter}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Cheatsheet]]></title>
    <link href="http://jessecravens.com/blog/2011/09/26/git-cheatsheet/"/>
    <updated>2011-09-26T23:10:56-05:00</updated>
    <id>http://jessecravens.com/blog/2011/09/26/git-cheatsheet</id>
    <content type="html"><![CDATA[<div class="">

<p>I made the switch from Subversion to Git awhile back, and early on I created a cheatsheet pulled from various sources on the web. I thought I&#8217;d share.</p> 

<h3>Git First-Time System Setup</h3>

<p>After installing Git, you should perform a set of one-time setup steps. These are system setups, meaning you only have to do them once per computer:</p>

{syntaxhighlighter brush: ps}
$ sudo apt-get install git-core
$ git config &#8211;global user.email youremail[at symbol]example.com
$ git config &#8211;global user.name &#8220;John Doe&#8221;
$ git config &#8211;global user.name &#8220;Your Name&#8221;
$ git config &#8211;global alias.co checkout
{/syntaxhighlighter}

<p>As a final setup step, you can optionally set the editor Git will use for commit messages.</p>

{syntaxhighlighter brush: ps}
$ git config &#8211;global core.editor &#8220;mate -w&#8221;

# Replace “mate -w” with “gvim -f” for gVim or “mvim -f” for MacVim.
{/syntaxhighlighter}

<h3>Quick Reference – Most Often Used Commands</h3>

{syntaxhighlighter brush: ps}
$ cd /path/to/repository
$ git init
$ git add .
$ git add -u
$ git log
$ git status
$ git commit -m &#8220;initial commit&#8221;

# made a mistake on the git commit
$ git commit -amend -m &#8220;initial commit&#8221;

# Add the remote repository

# ex 1
$ git remote add unfuddle git@subdomain.unfuddle.com:subdomain/abbreviation.git

# ex 2
$ git remote add origin git@subdomain.unfuddle.com:subdomain/abbreviation.git

# Configure the repository
$ git config remote.unfuddle.push refs/heads/master:refs/heads/master

# Push master branch to remote repository named unfuddle
$ git push unfuddle master

# Other commands:

# Clone an existing remote repo 
$ git clone git@subdomain.unfuddle.com:subdomain/abbreviation.git

# List all branches within your repo
$ git branch -a

#Create and switch to a new branch &#8220;whatever&#8221;
$ git checkout -b whatever 

{/syntaxhighlighter}

<p>Those are the basics, should be enough to make you dangerous. </p>

</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creation of iBoerne.com]]></title>
    <link href="http://jessecravens.com/blog/2011/06/08/creation-of-iboerne-com/"/>
    <updated>2011-06-08T21:44:44-05:00</updated>
    <id>http://jessecravens.com/blog/2011/06/08/creation-of-iboerne-com</id>
    <content type="html"><![CDATA[<h2>Creation of iBoerne.com</h2>

<p>secret sauce
 - local domain name
 - transparent account creation
 - targeted Facebook ads
 - exceptional member experience/UI design
 - presence on all platforms iOS and Android</p>

<p>TAGLINES</p>

<p>Be Cool. Use iBoerne.com
iBoerne.com doesn&#8217;t suck
events.iBoerne - Wuz Happenin?
iBoerne - keep up with Boerne</p>

<p>The simple way to keep up with friends, events, deals, rentals, etc.</p>

<hr />

<p>First lets talk Business concept and strategy:</p>

<p>So, I don&#8217;t know what the hell I want IBoerne to be - what the hell does Boerne need?</p>

<p>Can you start a business and just see where it goes? Is that possible?
What would events.iBoerne be considered? - Content Provider?</p>

<p>Have an event? List it on events.iBoerne today.
Screenscrape
Manual</p>

<p>Once traffic reaches a certain point begin to sell space - large events, festivals, etc
Very simple Application - but available on all platforms</p>

<hr />

<p>What drives traffic?
Best online experience for EVENTS</p>

<p>Start targeting ad</p>

<p>!!!! START SOMEWHERE
use events to get started</p>

<p>events.iBoerne - Wuz Happenin?
Superior online/mobile experience for Local Events
Download the iPhone/ Android app
Very simple App concept.
http://visitmix.com/Articles/Web-Forms-for-People
USE brightkite as an example</p>

<p>Jesse Cravens of LokalLogik - creators of Local Social Mobile applications.
LokalLogik Small Town Platform</p>

<p>NETWORK EFFECT!</p>

<hr />

<p>Best online experience for DEALS / COUPONS
coupons.iBoerne - Start Saving Now
Affiliate - Groupons, livingsocial?</p>

<hr />

<p>iBoerne - Interactive Boerne by TastyAppz or LokalLogik Small Town Solutions (Social/Mobile/Local) - sociomobiloco
 - so what does this entail?</p>

<p>Concepts to test out - market research.</p>

<p>What is the appetite for MultiChannel Marketing solutions in Boerne?
Ping.fm</p>

<p>Retailers
Schools
Churches
Restaurants
Appointment Reminders
Promoters
Realtors</p>

<p>Start with One Feature like Events
Multiple Inputs
Screen Scrapers
Input Form
Integration with Facebook
Manual Entry by Admin</p>

<p>Audience Scope?
++++++
The domain is obviously limiting, but that might be ok.
So - first I think town - LOCAL - SOCIAL - MOBILE
Then I go regional. Central Texas, I think hill country visitor - more broad - all small towns in central texas - which changes the domain,
Then my mind wanders to Domestic, and then International.</p>

<p>So theres also the notion that I could use this as an example Business.
And maybe the iBoerne app - or appsuite is the flagship products for a Consulting Business for Local Businesses.
That way the local scope will make sense to any small business owner in any Texas small town</p>

<p>Much like Kuhl Yogurt - just another use case.</p>

<p>?Feature Scope?
++++++</p>

<p>One place for what I need in Boerne</p>

<p>events.iboerne.com - Events - am I the only one that wants to go to one place to see whats happening in Boerne?
rentals.iboerne.com - Rentals - I want to see all rentals in Boerne in one spot
coupons.iboerne.com - Coupons and Deals -  I want to save money, so does everyone else</p>

<p>TRANSPARENT Account creation and login</p>

<p>this stuff here sounds more like - lokallogik.com &#8212;->
Stored Value Card Creation
Managed Multi-Channel Marketing Campaigns - SMS text, MMS, Social (Facebook and Twiter)</p>

<p>Random Acts of Refreshment - expands on gift card model
Sends purchased gift via social media</p>

<p>?Business Model?
++++++
Very targeted ad campaigns</p>

<p>?Technical?
++++++
Drupal vs Rails
Already moving forward with Rails  - not really wanting the Drupal PHP overhead.
Id rather learn rails cuz Ill be learning on or the other.</p>

<hr />

<p>Use an application generator template</p>

<p>rails new iboerne2 -m tmpls/railsApps/rails3-application-templates/rails3-mongoid-devise-template.rb -T -O -J</p>

<p>Once you’ve assembled the proper Gemfile, install the gems using bundle install
$ bundle install</p>

<p>rails s</p>

<p>For iboerne3 , I decided to not use the mongo install - due to event calendar but after understanding default test and fixtures, i opted for this template rails new APP_NAME -m https://raw.github.com/RailsApps/rails3-application-templates/master/rails3-devise-rspec-cucumber-template.rb -T</p>

<hr />

<p>git init</p>

<p>Jesse-Cravenss-MacBook-Pro:iboerne jessecravens$ git init
Reinitialized existing Git repository in /Users/jessecravens/Codebase/rails_projects/iboerne/.git/</p>

<p>Jesse-Cravenss-MacBook-Pro:iboerne jessecravens$ git log
commit ad64981ea09bb72ce1024b2e05b5a319a7004e51
Author: Jesse Cravens <a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#x6f;&#58;&#x6a;&#101;&#x73;&#115;&#101;&#46;&#99;&#114;&#x61;&#118;&#x65;&#x6e;&#115;&#64;&#103;&#109;&#x61;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;">&#x6a;&#x65;&#x73;&#x73;&#101;&#x2e;&#x63;&#x72;&#x61;&#x76;&#101;&#x6e;&#x73;&#x40;&#x67;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a>
Date:   Tue May 31 21:02:13 2011 -0500</p>

<pre><code>new Rails app generated by rails_apps_composer
</code></pre>

<p>Jesse-Cravenss-MacBook-Pro:iboerne jessecravens$ git status</p>

<h1>On branch working_branch</h1>

<h2>nothing to commit (working directory clean)</h2>

<p>work on a different branch</p>

<p>Here, we will both create a new branch and switch to it</p>

<p>$ git checkout -b add-RWD-stylesheets
Switched to a new branch &#8216;add-RWD-stylesheets&#8217;</p>

<p>$ git branch
master
* add-RWD-stylesheets</p>

<p>The full value of branching only becomes clear when working on a project with multiple developers, but branches are helpful even for a single-developer tutorial such as this one.</p>

<p>In particular, the master branch is insulated from any changes we make to the topic branch, so even if we really screw things up we can always abandon the changes by checking out the master branch and deleting the topic branch. We’ll see how to do this at the end of the section.</p>

<hr />

<p>installing Event Calendar
https://github.com/elevation/event_calendar</p>

<p>Rails 3
As a gem:
  gem install event-calendar
Add this to your Gemfile:
  gem &#8216;event-calendar&#8217;, :require => &#8216;event_calendar&#8217;
Or as a plugin:
  rails plugin install git://github.com/elevation/event_calendar.git
To generate the necessary static files AND the example below:
  rails generate event_calendar</p>

<p>this is what I had in the Event model using Mongoid</p>

<p>class Event
  include Mongoid::Document
  field :name, :type => String
  field :description, :type => String
end</p>

<p>So I made the decision that Event Calendar wasn&#8217;t going to work with Mongo without some considerable pain.</p>

<p>I created a new app that wasn&#8217;t mongo configured and tried out event calendar</p>

<h2>I tested the plugin, had an issue with has_event_calendar, but restarted the server and now its working fine. - per forum recommendation</h2>

<p>So in the meantime, I created a static site with html and css, web fonts, etc , Now i have the style of my site that I want to move forward with.</p>

<p>I plan to create the logo in Canvas - maybe.
or webfonts</p>

<hr />

<p>Next Ill scaffold the Event</p>

<p>rails generate scaffold Event name:string start_at:datetime end_at:datetime all_day:boolean</p>

<p>without validations
later we will write a few tests, that will break - and then add validations to resolve the failed tests</p>

<p>git commit -m &#8220;scaffolded Event&#8221;</p>

<p>Now we are ready to install the event-calendar plugin</p>

<p>  gem install event-calendar</p>

<p>Add this to your Gemfile:</p>

<p>  gem &#8216;event-calendar&#8217;, :require => &#8216;event_calendar&#8217;</p>

<p>and run bundle</p>

<p>To generate the necessary static files AND the example below:</p>

<p>  rails generate event_calendar</p>

<p>It will ask if you want to force the override of the Event model.</p>

<p>I select yes and move forward
There is also a conflict with the migration script.</p>

<p>woops i forgot to add 2 parameters to the generator:</p>

<p>rails generate event_calendar &#8211;use-jquery &#8211;use-all-day</p>

<p>so lets just run it again.</p>

<p>now i got to http://localhost:3000/events</p>

<p>hmm
SQLite3::SQLException: no such table: events: SELECT &#8220;events&#8221;.* FROM &#8220;events&#8221;</p>

<p>well - i haven&#8217;t run my db migration yet</p>

<p>rake db:migrate</p>

<p>ok now events work</p>

<p>lets try calendar…</p>

<p>hmm - we need to update our routes, for some reason our generator assumed this entry was in our routes file</p>

<p>  match &#8216;:controller(/:action(/:id(.:format)))&#8217;</p>

<p>this is legacy and it is not recommended but for now
  # This is a legacy wild controller route that&#8217;s not recommended for RESTful applications.
  # Note: This route will make all actions in every controller accessible via GET requests.</p>

<p>Next - we can add a color field to the Event model</p>

<h1>But we can do that later - lets finish our basic application by formulating our testing strategy and merge to master branch</h1>

<ol>
<li>Commit our changes and additions to the &#8216;working&#8217; Event branch</li>
</ol>


<p>git commit -m &#8220;added Event-calendar&#8221;</p>

<ol>
<li>Run our Tests (first we need to write our tests)</li>
</ol>


<p>and even before that make sure we get our testing framework set up</p>

<p>Generate RSpec
Use the rspec-rails generator to set up files needed for RSpec:
$ rails generate rspec:install
The rspec-rails generator creates the files:</p>

<pre><code>• .rspec
• spec/spec_helper.rb
</code></pre>

<p>You can remove the test folder (it is not needed for RSpec):
$ rm -rf test/
Add Factory Girl for Test Objects</p>

<p>The Factory Girl gem is used to create default model objects for tests. For example, if a controller action requires finding a User object before displaying a “show” page, Factory Girl will create a user just for a test of the controller. You’ll need gem &#8216;factory_girl_rails&#8217;, :group => :test in your Gemfile.</p>

<p>You’ll need a spec/factories.rb file to contain the factory definitions for any default objects used for testing. You can create one like this:</p>

<p>require &#8216;factory_girl&#8217;</p>

<p>Factory.define :user do |u|
  u.name &#8216;Test User&#8217;
  u.email &#8216;user@test.com&#8217;
  u.password &#8216;please&#8217;
end</p>

<p>Add Devise Test Helpers</p>

<p>Using Devise, your controllers will often include before_filter :authenticate_user! to limit access to signed-in users. Your tests will fail unless a default user is created and logs in before each test runs. Devise provides test helpers to make it simple to create and log in a default user.</p>

<p>Create a file spec/support/devise.rb:</p>

<p>RSpec.configure do |config|
  config.include Devise::TestHelpers, :type => :controller
end</p>

<p>Now you can write controller specs that set up a signed-in user before tests are run.</p>

<p>Run RSpec
Run rake -T to check that rake tasks for RSpec are available.
Yep, they are there.
run rake db:migrate:status to view the status of your migrations
Run rake db:migrate to create a db/schema.rb file so rake spec can run successfully.
You should be able to run rake spec to run all specs. If you haven’t written any specs, you’ll see the message “No examples matching ./spec//_spec.rb could be found”.
You can copy the files from the example spec directory to use our ready-made specs.
Add Cucumber for Behavior Driven Development
If you are creating an application template, this step uses the cucumber recipe from the rails_apps_composer repository.
Use the gem cucumber-rails to set up the app for Cucumber.
You should have the following gems in your Gemfile file:
group :test do
  gem &#8216;cucumber-rails&#8217;
  gem &#8216;capybara&#8217;
  gem &#8216;database_cleaner&#8217;
end
Install the required gems on your computer:
$ bundle install
Use the cucumber-rails generator to set up files needed for Cucumber:
$ rails generate cucumber:install &#8211;capybara &#8211;rspec
The -–capybara option specifies Capybara instead of the default Webrat for acceptance testing. The -–rspec option enables RSpec matchers for your step definitions.</p>

<p>So whats all this</p>

<p>Unit Testing
Integration Testing
Acceptance Testing
Functional Testing
Performance Testing</p>

<p>Acceptance Tests/Criteria (in Agile Software Development) are usually created by business customers and expressed in a business domain language. These are high-level tests to test the completeness of a user story or stories &#8216;played&#8217; during any sprint/iteration. These tests are created ideally through collaboration between business customers, business analysts, testers and developers, however the business customers (product owners) are the primary owners of these tests. As the user stories pass their acceptance criteria, the business owners can be sure of the fact that the developers are progressing in the right direction about how the application was envisaged to work and so it&#8217;s essential that these tests include both business logic tests as well as UI validation elements (if need be).</p>

<ol>
<li><p>Merge Event branch with master branch</p></li>
<li><p>Finish with a Push to unfuddle private repo</p></li>
</ol>


<hr />

<p>Design for Mobile First</p>

<p>included RWD - media queries</p>

<p>semantic forms markup/stylesheets</p>

<p>need to consider :
http://visitmix.com/Articles/Web-Forms-for-People
http://www.alistapart.com/articles/signupforms/</p>

<p>The signup form may need to be rethought</p>

<h2>but, this will when we get to Facebook integration</h2>

<p>Design for Mobile First - Device Recognition</p>

<p>Devise Atlas integration to inched a different to include different libraries for different form factors</p>

<p>rails plugin install https://github.com/lastminutelabs/Device-Aware.git
make sure you have dependencies installed</p>

<ol>
<li><p>gem install json</p></li>
<li><p>gem install rubyzip</p></li>
</ol>


<p>rake -T
rake deviceatlas_update</p>

<p>be sure to update your api key
after some finagling and moving items around, i determined that the file appeared to be downloaded using:</p>

<p>http://deviceatlas.com/user/13758/pm_licencing/downloadlatest/9653/zip</p>

<p>instead of the url used in the plugin:
&#8220;/getJSON.php?licencekey=&#8221; + DEVICE_ATLAS_LICENSE + &#8220;&amp;format=zip&#8221;</p>

<p>the rake task did not run without error, but it wasn&#8217;t until later i noticed the file had actually been downloaded.</p>

<p>from there once i included the</p>

<p>include ActsAsDeviceAware</p>

<p>in the ApplicationController:
ActionController::RoutingError (uninitialized constant ApplicationController::ActsAsDeviceAware):
  app/controllers/application_controller.rb:2:in <code>&lt;class:ApplicationController&gt;'
  app/controllers/application_controller.rb:1:in</code><top (required)>&#8217;
  app/controllers/home_controller.rb:1:in `<top (required)>&#8217;</p>

<hr />

<p>RSpec and testing
created a Events scaffold</p>

<hr />

<p>Facebook integration
Sign up with Facebook</p>

<p>Created an application at developer.facebook.com</p>

<p>App ID
177214749000843
API Key
fefb831fad6a0dbd7e8131410ae5cf1e
App Secret
fc2ee483812471349f43730bf5e7e720
Site URL
http://iboerne.com/
Site Domain
iboerne.com
Contact Email
jesse.cravens@gmail.com
Support Email
jesse.cravens@gmail.com
App Description
iBoerne
Sample Code
Get started quickly with some example code!</p>

<hr />

<p>Trumpia Integration
Set up a free account at trumpia.com</p>

<p>Gave me an online webform that can be embedded using an iframe.</p>

<hr />

<hr />

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[YUI3 Rails Application Template]]></title>
    <link href="http://jessecravens.com/blog/2011/01/30/yui3-rails-application-template/"/>
    <updated>2011-01-30T01:02:15-06:00</updated>
    <id>http://jessecravens.com/blog/2011/01/30/yui3-rails-application-template</id>
    <content type="html"><![CDATA[<div class="">
<p>I decided to put together a Rails template to generate a quick sqlite3 db driven web app to test out <a href="http://developer.yahoo.com/yui/3/">YUI3</a> functionality quickly. Rails 3 makes it super simple to quickly generate real JSON data for testing out various YUI 3 components such as DataSource.</p> 

<p>The template takes care of removing the Prototype library, including yui-debug.js and the CSS framework including reset, and the new <a href="http://developer.yahoo.com/yui/3/cssgrids/">Grids</a> - currently in beta. I also wanted to deliver my basic markup quickly so I&#8217;ve added <a href="http://haml-lang.com/docs/yardoc/file.HAML_REFERENCE.html#html_elements">Haml</a></p>

<p>Since I have been disciplining myself to follow Test Driven Development on the server, I included all of my Rails testing dependencies in the app template as well (RSpec, Cucumber, WebRat, Factory Girl) and I plan to continue to leverage <a href="http://developer.yahoo.com/yui/3/test/">YUI Test</a> on the client as I run through browser validations of the <a href="http://developer.yahoo.com/yui/3/examples/datasource/datasource_polling.html">datasource-polling sub-module</a>. Clone the rails app template <a href="https://github.com/jessecravens/yui3-rails-template">here</a>.</p>

{syntaxhighlighter brush: ruby}
# YUI3 Application Generator Template
# Generates a Rails app; includes YUI3, Haml, RSpec, Cucumber, WebRat, Factory Girl &#8230;

puts &#8220;Generating a new YUI3 Rails app&#8221;

#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
# Create the database
#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
puts &#8220;creating the database&#8230;&#8221;
run &#8216;rake db:create:all&#8217;

#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
# GIT
#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
puts &#8220;setting up &#8216;git&#8217;&#8221;

append_file &#8216;.gitignore&#8217; do <<-FILE
'.DS_Store'
'.rvmrc'
FILE
end
git :init
git :add => &#8216;.&#8217;
git :commit => &#8220;-m &#8216;Initial Commit of YUI3 Rails App&#8217;&#8221;

#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
# Remove files
#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
puts &#8220;removing files&#8230;&#8221;
run &#8216;rm public/index.html&#8217;
run &#8216;rm public/favicon.ico&#8217;
run &#8216;rm public/images/rails.png&#8217;
run &#8216;rm README&#8217;
run &#8216;touch README&#8217;

puts &#8220;banning spiders from your site by changing robots.txt&#8230;&#8221;
gsub_file &#8216;public/robots.txt&#8217;, /# User-Agent/, &#8216;User-Agent&#8217;
gsub_file &#8216;public/robots.txt&#8217;, /# Disallow/, &#8216;Disallow&#8217;

#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
# Haml 
#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
  puts &#8220;setting up Gemfile for Haml&#8230;&#8221;
  append_file &#8216;Gemfile&#8217;, &#8220;\n# Bundle gems needed for Haml\n&#8221;
  gem &#8216;haml&#8217;, &#8216;3.0.18&#8217;
  gem &#8216;haml-rails&#8217;, &#8216;0.2&#8217;, :group => :development

#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
# Set up YUI3
#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-

puts &#8220;replacing Prototype with YUI3&#8221;
run &#8216;rm public/javascripts/controls.js&#8217;
run &#8216;rm public/javascripts/dragdrop.js&#8217;
run &#8216;rm public/javascripts/effects.js&#8217;
run &#8216;rm public/javascripts/prototype.js&#8217;
run &#8216;rm public/javascripts/rails.js&#8217;

get &#8220;http://yui.yahooapis.com/combo?3.3.0/build/yui/yui-debug.js&#8221;,  &#8220;public/javascripts/yui-debug.js&#8221;
get &#8220;http://yui.yahooapis.com/3.3.0/build/cssreset/reset.css&#8221;,  &#8220;public/stylesheets/reset.css&#8221;
get &#8220;http://yui.yahooapis.com/3.3.0/build/cssbase/base.css&#8221;,  &#8220;public/stylesheets/base.css&#8221;
get &#8220;http://yui.yahooapis.com/3.3.0/build/cssfonts/fonts.css&#8221;,  &#8220;public/stylesheets/fonts.css&#8221;
get &#8220;http://yui.yahooapis.com/3.3.0/build/cssgrids/grids.css&#8221;,  &#8220;public/stylesheets/grids.css&#8221;

#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
# Create an index page
#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
puts &#8220;create a home controller and view&#8221;
generate(:controller, &#8220;home index&#8221;)
gsub_file &#8216;config/routes.rb&#8217;, /get &#34;home\/index&#34;/, &#8216;root :to => &#8220;home#index&#8221;&#8217;
append_file &#8216;app/views/home/index.html.haml&#8217;do <<-FILE
!!!
%h2{:class => &#8220;subtitle&#8221;} Get Started
%p{:class => &#8220;content&#8221;} Update application.js with your logic
%div{:class => &#8220;container&#8221;, :id => &#8220;container&#8221;}
%div{:id => &#8220;testLogger&#8221;}
FILE
end

#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
# Generate Application Layout
#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-

run &#8216;rm app/views/layouts/application.html.erb&#8217;
  create_file &#8216;app/views/layouts/application.html.haml&#8217; do <<-FILE
!!!
%html
  %head
    %title YUI3 App
    = stylesheet_link_tag "reset"
    = stylesheet_link_tag "base"
    = stylesheet_link_tag "fonts"
    = stylesheet_link_tag "grids"
    = stylesheet_link_tag "application"
    = javascript_include_tag :all
    = csrf_meta_tag
  %body{:class =>&#8220;yui3-skin-sam  yui-skin-sam&#8221;}
    = yield
FILE
end

#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
# Add Stylesheets
#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
create_file &#8216;public/stylesheets/application.css&#8217; do <<-FILE
div.container {
  width: 100%;
  height: 100px; 
  padding: 10px;
  margin: 10px;
  border: 1px solid red;
}

#testLogger {
    margin-bottom: 1em;
}

#testLogger .yui3-console .yui3-console-title {
    border: 0 none;
    color: #000;
    font-size: 13px;
    font-weight: bold;
    margin: 0;
    text-transform: none;
}
#testLogger .yui3-console .yui3-console-entry-meta {
    margin: 0;
}

.yui3-skin-sam .yui3-console-entry-pass .yui3-console-entry-cat {
    background: #070;
    color: #fff;
}

FILE
end

#----------------------------------------------------------------------------
# Initialize YUI and add YUI Test
#----------------------------------------------------------------------------
append_file 'public/javascripts/application.js' do <<-FILE
  
  YUI({ filter: 'raw' }).use("node", "console", "test",function (Y) {

      Y.namespace("example.test");

      Y.example.test.DataTestCase = new Y.Test.Case({

          //name of the test case - if not provided, one is auto-generated
          name : "Data Tests",

          //---------------------------------------------------------------------
          // setUp and tearDown methods - optional
          //---------------------------------------------------------------------

          /*
           * Sets up data that is needed by each test.
           */
          setUp : function () {
              this.data = {
                  name: "test",
                  year: 2007,
                  beta: true
              };
          },

          /*
           * Cleans up everything that was created by setUp().
           */
          tearDown : function () {
              delete this.data;
          },

          //---------------------------------------------------------------------
          // Test methods - names must begin with "test"
          //---------------------------------------------------------------------

          testName : function () {
              var Assert = Y.Assert;

              Assert.isObject(this.data);
              Assert.isString(this.data.name);
              Assert.areEqual("test", this.data.name);            
          },

          testYear : function () {
              var Assert = Y.Assert;

              Assert.isObject(this.data);
              Assert.isNumber(this.data.year);
              Assert.areEqual(2007, this.data.year);            
          },

          testBeta : function () {
              var Assert = Y.Assert;

              Assert.isObject(this.data);
              Assert.isBoolean(this.data.beta);
              Assert.isTrue(this.data.beta);
          }

      });

      Y.example.test.ArrayTestCase = new Y.Test.Case({

          //name of the test case - if not provided, one is auto-generated
          name : "Array Tests",

          //---------------------------------------------------------------------
          // setUp and tearDown methods - optional
          //---------------------------------------------------------------------

          /*
           * Sets up data that is needed by each test.
           */
          setUp : function () {
              this.data = [0,1,2,3,4]
          },

          /*
           * Cleans up everything that was created by setUp().
           */
          tearDown : function () {
              delete this.data;
          },

          //---------------------------------------------------------------------
          // Test methods - names must begin with "test"
          //---------------------------------------------------------------------

          testPop : function () {
              var Assert = Y.Assert;

              var value = this.data.pop();

              Assert.areEqual(4, this.data.length);
              Assert.areEqual(4, value);            
          },        

          testPush : function () {
              var Assert = Y.Assert;

              this.data.push(5);

              Assert.areEqual(6, this.data.length);
              Assert.areEqual(5, this.data[5]);            
          },

          testSplice : function () {
              var Assert = Y.Assert;

              this.data.splice(2, 1, 6, 7);

              Assert.areEqual(6, this.data.length);
              Assert.areEqual(6, this.data[2]);           
              Assert.areEqual(7, this.data[3]);           
          }

      });    

      Y.example.test.ExampleSuite = new Y.Test.Suite("Example Suite");
      Y.example.test.ExampleSuite.add(Y.example.test.DataTestCase);
      Y.example.test.ExampleSuite.add(Y.example.test.ArrayTestCase);

      //create the console
      var r = new Y.Console({
          newestOnTop : false,
          style: 'block' // to anchor in the example content
      });

      r.render('#testLogger');

      Y.Test.Runner.add(Y.example.test.ExampleSuite);

      //run the tests
      Y.Test.Runner.run();

  });

FILE
end

#----------------------------------------------------------------------------
# Setup RSpec & Cucumber
#----------------------------------------------------------------------------
puts 'Setting up RSpec, Cucumber, webrat, factory_girl, faker'
append_file 'Gemfile' do <<-FILE
group :development, :test do
  gem "rspec-rails", ">= 2.0.1&#8221;
  gem &#8220;cucumber-rails&#8221;, &#8220;>= 0.3.2&#8221;
  gem &#8220;webrat&#8221;, &#8220;>= 0.7.2.beta.2&#8221;
  gem &#8220;factory_girl_rails&#8221;
  gem &#8220;faker&#8221;
end
FILE
end

run &#8216;bundle install&#8217;
run &#8216;script/rails generate rspec:install&#8217;
run &#8216;script/rails generate cucumber:install&#8217;
run &#8216;rake db:migrate&#8217;
run &#8216;rake db:test:prepare&#8217;

run &#8216;touch spec/factories.rb&#8217;
#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
# Finish up
#&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-
puts &#8220;Commiting to Git repository&#8230;&#8221;
git :add => &#8216;.&#8217;
git :commit => &#8220;-am &#8216;Setup Complete&#8217;&#8221;

puts &#8220;DONE - setting up your YUI3 Rails App.&#8221;


{/syntaxhighlighter}
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[El Nino, French Fries, Chippendale with Swayze, but do you remember this one? Chris Farley as Christian Laettner]]></title>
    <link href="http://jessecravens.com/blog/2010/10/18/el-nino-french-fries-chippendale-with-swayze-but-do-you-remember-this-one-chris-farley-as-christian-laettner/"/>
    <updated>2010-10-18T18:48:09-05:00</updated>
    <id>http://jessecravens.com/blog/2010/10/18/el-nino-french-fries-chippendale-with-swayze-but-do-you-remember-this-one-chris-farley-as-christian-laettner</id>
    <content type="html"><![CDATA[<p>El Nino, French Fries, Chippendale with Swayze, but do you remember this one?</p>


<object width="480" height="385"><param name="movie" value="http://www.youtube.com/v/bPMo14XTTvE?fs=1&amp;hl=en_US"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/bPMo14XTTvE?fs=1&amp;hl=en_US" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="480" height="385"></embed></object>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Researching the Latest in HTPC (Home Theater PC)]]></title>
    <link href="http://jessecravens.com/blog/2010/01/30/researching-the-latest-in-htpc-home-theater-pc/"/>
    <updated>2010-01-30T19:30:56-06:00</updated>
    <id>http://jessecravens.com/blog/2010/01/30/researching-the-latest-in-htpc-home-theater-pc</id>
    <content type="html"><![CDATA[<p>Fed up with paying for lame content, we recently turned off our cable and turned in our DVR.<br />Since then, I have been doing my research and preparing to build or purchase a system that leverages our broadband connection and Local HD Channels for content.<br /><br />Here is my growing list of resources: <br /><b><br />General Information</b><br /><ul><li><a href="http://en.wikipedia.org/wiki/Home_theater_PC">Home theater PC - Wikipedia, the free encyclopedia</a></li></ul><br /><b>Articles</b><br /><ul><li><a href="http://gizmodo.com/5366161/life-without-cable-or-satellite-tv-is-easier-than-you-think">Life Without Cable or Satellite TV Is Easier Than You Think - Htpc - Gizmodo</a></li><li><a href="http://gizmodo.com/5420853/why-its-finally-time-to-get-a-home-theater-pc">Why It&#8217;s Finally Time To Get a Home Theater PC - Htpc - Gizmodo</a></li><li><a href="http://www.extremetech.com/article2/0,2845,2349560,00.asp">Mini-Roundup: The Best New HTPC Cases - Chieftec HM-02 - CPUs, Boards &amp; Components by ExtremeTech</a></li><li><a href="http://www.engadget.com/2009/11/12/dells-inspiron-zino-hd-on-sale-now-in-america-starts-at-229/">Dell&#8217;s Inspiron Zino HD on sale now in America: starts at $229, doubles as an HTPC &#8211; Engadget</a></li><li><a href="http://www.engadget.com/2009/07/21/how-to-build-a-blu-ray-tv-tuner-equipped-htpc-for-under-1-00/">How-to: Build a Blu-ray / TV tuner-equipped HTPC for under $1,000 &#8211; Engadget</a></li><li><a href="http://sewelldirect.com/articles/vga-to-hdmi.aspx">Convert VGA to HDMI with Audio (HDMI to VGA)</a></li></ul>      <br /><b>Videos</b><br /><ul><li><a href="http://www.howcast.com/videos/185705-How-To-Connect-Your-Laptop-To-Your-Television">How To Connect Your Laptop To Your Television Video | Laptop Computers Videos | Howcast.com</a></li><li><a href="http://www.youtube.com/watch?v=5c9-LLY33Gw">YouTube - CES 2010 - Core i5 is the new HTPC powerhouse</a></li></ul><br /><b>Channels</b><br /><ul><li><a href="http://www.hulu.com/">Hulu - Watch your favorites. Anytime. For free.</a></li><li><a href="http://www.fancast.com/">Fancast | Watch Full TV Shows and Movies | Free Online Streaming</a></li><li><a href="http://www.joost.com/epg/us/shows/">Shows - Featured - United States - Joost</a></li><li><a href="http://www.clicker.com/">Clicker - What&#8217;s On Online</a></li></ul>   <br /><b>On Demand Content</b><br /><ul><li><a href="http://www.amazon.com/Video-On-Demand/b/ref=topnav_storetab_atv?ie=UTF8&amp;node=16261631">Amazon.com Video On Demand: TV shows, movies, international videos and more, ready to download</a></li></ul> <br /><b>Players </b><br /><ul><li><a href="http://www.roku.com/">Roku Digital Video Player | Watch Netflix, Amazon Video On Demand and MLB.TV on Roku Player</a></li><li><a href="http://www.vudu.com/noscript.html">VUDU - Turn Javscript On Please</a></li></ul> <b><br />Hardware - All In One</b><br /><ul><li><a href="http://usa.asus.com/product.aspx?P_ID=wH1q2VTqyLXaCw1f">ASUSTeK Computer Inc. EeeBox PC EB1012</a></li><li><a href="http://www.dell.com/us/en/corp/desktops/inspiron-zino-hd/pd.aspx?refid=inspiron-zino-hd&amp;s=corp">Inspiron Zino HD Desktop | Dell</a></li><li><a href="http://mvixusa.com/product/ultiopro">Mvix UltioPro (MX-880HD) HD Media Center with PVR</a></li><li><a href="http://www.bodhiboxes.com/index.php?option=com_content&amp;view=article&amp;id=10&amp;Itemid=17">BodhiBoxes - Home Theater Personal Computer - Configure</a></li></ul>    <br /><b>Hardware - Parts</b><br /><ul><li><a href="http://www.google.com/products?q=nmediapc+htpc+2000b&amp;hl=en&amp;output=nojs">nmediapc htpc 2000b - Google Product Search</a></li><li><a href="http://www.google.com/products?q=intel+core+2+quad+q8400&amp;hl=en&amp;output=nojs">intel core 2 quad q8400 - Google Product Search</a></li><li><a href="http://www.google.com/products?q=lg+CH08LS10&amp;hl=en&amp;output=nojs">lg CH08LS10 - Google Product Search</a></li></ul>  <br /><b>Software and OS</b><br /><ul><li><a href="http://www.boxee.tv/">Boxee</a></li><li><a href="http://www.elementmypc.com/main/">Element OS: Linux on your HTPC</a></li><li><a href="http://www.mythbuntu.org/about">About Mythbuntu | Mythbuntu</a></li><li><a href="http://www.linuxmce.org/">Welcome to LinuxMCE</a></li><li><a href="http://knoppmyth.net/knoppmyth.html">KnoppMyth</a></li><li><a href="http://geexbox.org/en/index.html">GeeXboX HomePage</a></li></ul>     <br /><b>Network Storage</b><br /><ul><li><a href="http://www.shopping.hp.com/product/computer/categories/home_servers/1/accessories/FL702AA%2523ABA;HHOJSID=dVn4LdMJq4ls00VSvQvFH4bRJR9T82wLy4nVJLn25KB81KF1Pvpz%21181851530">HP® Official Store — Buy the HP MediaSmart Server LX195 direct from HP</a></li></ul> <br /><b>Recorders</b><br /><ul><li><a href="http://www.hauppauge.com/index.htm">Hauppauge Computer Works</a></li><li><a href="http://mvixusa.com/product/ultiopro">Mvix UltioPro (MX-880HD) HD Media Center with PVR</a></li></ul>  <br /><b>Antennas</b><br /><ul><li><a target="HDTV Indoor / Outdoor Antenna" title="HDTV Indoor / Outdoor Antenna" href="http://www.monoprice.com/products/product.asp?c_id=109&amp;cp_id=10901&amp;cs_id=1090102&amp;p_id=4730&amp;seq=1&amp;format=4#feedback">HDMI Cable, Home Theater Accessories, HDMI Products, Cables, Adapters, Video/Audio Switch, Networking, USB, Firewire, Printer Toner, and more!</a></li></ul> <br /><b>Remotes</b><br /><ul><li><a href="http://gizmodo.com/5435219/lenovos-multimedia-remote-with-keyboard">Lenovo&#8217;s Multimedia Remote with Keyboard - trackpad - Gizmodo</a></li><li><a href="http://www.gmote.org/">Gmote &gt; Android Remote</a></li><li><a href="http://www.logitech.com/index.cfm/keyboards/keyboard/devices/3848&amp;cl=us,en">diNovo Mini™</a></li><li><a href="http://www.google.com/products?q=HTPCKB&amp;hl=en">HTPCKB - Google Product Search</a></li></ul>   <br /><b>Cables/Converters</b><br /><ul><li><a href="http://www.monoprice.com/products/search.asp?keyword=vga+to+hdmi&amp;x=24&amp;y=15">HDMI Cable, Home Theater Accessories, HDMI Products, Cables, Adapters, Video/Audio Switch, Networking, USB, Firewire, Printer Toner, and more!</a></li><li><a href="http://sewelldirect.com/ATLONA-VGA-TO-HDMI-CONVERTERSCALER.asp">ATLONA VGA TO HDMI CONVERTER/SCALER - AT-HD500, $197.10</a></li></ul>  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />  <br /><br /><div class="zemanta-pixie"><img class="zemanta-pixie-img" alt="" src="http://img.zemanta.com/pixy.gif?x-id=37492be8-1a37-87f8-8f30-353c32d3f0b9" /></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jerry Joseph and the Jackmormons Live at Blue Nile (upstairs) on 2010-01-23 (January 23, 2010)]]></title>
    <link href="http://jessecravens.com/blog/2010/01/30/jerry-joseph-and-the-jackmormons-live-at-blue-nile-upstairs-on-2010-01-23-january-23-2010/"/>
    <updated>2010-01-30T12:14:19-06:00</updated>
    <id>http://jessecravens.com/blog/2010/01/30/jerry-joseph-and-the-jackmormons-live-at-blue-nile-upstairs-on-2010-01-23-january-23-2010</id>
    <content type="html"><![CDATA[<p><embed type="application/x-shockwave-flash" width="350"     height="24"     allowfullscreen="true"  allowscriptaccess="always"  src="http://www.archive.org/flow/flowplayer.commercial-3.0.5.swf"   w3c="true"  flashvars='config={"key":"#$b6eb72a0f2f1e29f3d4","playlist":[{"url":"http://www.archive.org/download/jj2010-01-23/jj2010-01-24v2_d1t01_vbr.mp3","autoPlay":false},{"url":"http://www.archive.org/download/jj2010-01-23/jj2010-01-24v2_d1t02_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/jj2010-01-23/jj2010-01-24v2_d1t03_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/jj2010-01-23/jj2010-01-24v2_d1t04_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/jj2010-01-23/jj2010-01-24v2_d1t05_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/jj2010-01-23/jj2010-01-24v2_d1t06_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/jj2010-01-23/jj2010-01-24v2_d1t07_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/jj2010-01-23/jj2010-01-24v2_d1t08_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/jj2010-01-23/jj2010-01-24v2_d2t01_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/jj2010-01-23/jj2010-01-24v2_d2t02_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/jj2010-01-23/jj2010-01-24v2_d2t03_vbr.mp3","autoPlay":true}],"clip":{"autoPlay":true},"canvas":{"backgroundColor":"0x000000","backgroundGradient":"none"},"plugins":{"audio":{"url":"http://www.archive.org/flow/flowplayer.audio-3.0.3-dev.swf"},"controls":{"playlist":true,"fullscreen":false,"gloss":"high","backgroundColor":"0x000000","backgroundGradient":"medium","sliderColor":"0x777777","progressColor":"0x777777","timeColor":"0xeeeeee","durationColor":"0x01DAFF","buttonColor":"0x333333","buttonOverColor":"0x505050"}},"contextMenu":[{"Listen+to+jj2010-01-23+at+archive.org":"function()"},"-","Flowplayer 3.0.5"]}'> </embed></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Head For The Hills Live at Hotel Oregon on 2010-01-23 (January 23, 2010)]]></title>
    <link href="http://jessecravens.com/blog/2010/01/30/head-for-the-hills-live-at-hotel-oregon-on-2010-01-23-january-23-2010/"/>
    <updated>2010-01-30T12:07:03-06:00</updated>
    <id>http://jessecravens.com/blog/2010/01/30/head-for-the-hills-live-at-hotel-oregon-on-2010-01-23-january-23-2010</id>
    <content type="html"><![CDATA[<p><embed type="application/x-shockwave-flash" width="350"     height="24"     allowfullscreen="true"  allowscriptaccess="always"  src="http://www.archive.org/flow/flowplayer.commercial-3.0.5.swf"   w3c="true"  flashvars='config={"key":"#$b6eb72a0f2f1e29f3d4","playlist":[{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track01_vbr.mp3","autoPlay":false},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track02_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track03_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track04_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track05_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track06_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track07_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track08_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track09_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track10_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track11_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track12_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track13_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track14_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track15_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track16_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track17_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track18_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track19_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set01track20_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track01_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track02_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track03_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track04_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track05_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track06_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track07_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track08_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track09_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track10_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track11_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track12_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track13_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track14_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track15_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track16_vbr.mp3","autoPlay":true},{"url":"http://www.archive.org/download/headforthehills2010-01-23.matrix.flac16/headforthehills2010-01-23matrix-set02track17_vbr.mp3","autoPlay":true}],"clip":{"autoPlay":true},"canvas":{"backgroundColor":"0x000000","backgroundGradient":"none"},"plugins":{"audio":{"url":"http://www.archive.org/flow/flowplayer.audio-3.0.3-dev.swf"},"controls":{"playlist":true,"fullscreen":false,"gloss":"high","backgroundColor":"0x000000","backgroundGradient":"medium","sliderColor":"0x777777","progressColor":"0x777777","timeColor":"0xeeeeee","durationColor":"0x01DAFF","buttonColor":"0x333333","buttonOverColor":"0x505050"}},"contextMenu":[{"Listen+to+headforthehills2010-01-23.matrix.flac16+at+archive.org":"function()"},"-","Flowplayer 3.0.5"]}'> </embed></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[YouTube - Broadcast Yourself - HTML5 version]]></title>
    <link href="http://jessecravens.com/blog/2010/01/30/youtube-broadcast-yourself-html5-version/"/>
    <updated>2010-01-30T09:42:38-06:00</updated>
    <id>http://jessecravens.com/blog/2010/01/30/youtube-broadcast-yourself-html5-version</id>
    <content type="html"><![CDATA[<p><a href="http://www.youtube.com/html5">YouTube - Broadcast Yourself.</a> - <em></em> [<a href="http://delicious.com/cravens/post">delicious.com/cravens</a>]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EduPunk]]></title>
    <link href="http://jessecravens.com/blog/2009/03/15/edupunk/"/>
    <updated>2009-03-15T12:22:26-05:00</updated>
    <id>http://jessecravens.com/blog/2009/03/15/edupunk</id>
    <content type="html"><![CDATA[<object width="445" height="364"><param name="movie" value="http://www.youtube.com/v/f7MxVqe_uRI&hl=en&fs=1&border=1"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/f7MxVqe_uRI&hl=en&fs=1&border=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="445" height="364"></embed></object>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Big Dummy Longtail from Surly]]></title>
    <link href="http://jessecravens.com/blog/2009/01/06/big-dummy-longtail-from-surly/"/>
    <updated>2009-01-06T22:00:20-06:00</updated>
    <id>http://jessecravens.com/blog/2009/01/06/big-dummy-longtail-from-surly</id>
    <content type="html"><![CDATA[<p><img style="float: right; display: inline; margin: 10px; width: 225px" src="http://jessecravens.com/images/jessecravens/freeradical.jpg" /></p>

<p>I stumbled upon the Big Dummy Longtail from Surly today while purchasing a 09&#8217; Trek 4500 24&#8221; frame at the <a href="http://bicyclesportshop.com/">Bicycle Sport Shop in Austin.</a>. Btw, for riders 6&#8217;6&#8221; and above, afters years of research, this is the only non custom frame I could find for entry/intermediate tall riders. I&#8217;ll be doing some customizing as needed, but at least I have an inexpensive starting point. So&#8230;I love the size and fit of the Trek, but I can&#8217;t get over the sweetness of the Big Dummy Longtail. Someday, I&#8217;ll use the <a href="http://www.xtracycle.com/home/hitchless-trailer/technical-specifications/">Xtracycle Free Radical conversion kit</a> to convert my cruiser.</p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Morning Jacket Live at Madison Square Garden on 2008-12-31]]></title>
    <link href="http://jessecravens.com/blog/2009/01/05/my-morning-jacket-live-at-madison-square-garden-on-2008-12-31/"/>
    <updated>2009-01-05T20:12:42-06:00</updated>
    <id>http://jessecravens.com/blog/2009/01/05/my-morning-jacket-live-at-madison-square-garden-on-2008-12-31</id>
    <content type="html"><![CDATA[<p><embed src="http://www.archive.org/flow/FlowPlayerLight.swf" allowfullscreen="true" allowscriptaccess="always" quality="high" type="application/x-shockwave-flash" pluginspage="http://www.adobe.com/go/getflashplayer" bgcolor="ffffff" flashvars="config={&quot;controlBarBackgroundColor&quot;:&quot;0x000000&quot;,&quot;loop&quot;:false,&quot;baseURL&quot;:&quot;http://www.archive.org/download/&quot;,&quot;showVolumeSlider&quot;:true,&quot;controlBarGloss&quot;:&quot;high&quot;,&quot;playList&quot;:[{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t01_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t02_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t03_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t04_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t05_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t06_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t07_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t08_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t09_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t10_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t11_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t12_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t13_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t14_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t15_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t16_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t17_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t18_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t19_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t20_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t21_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t22_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s1t23_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s2t01_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s2t02_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s2t03_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s2t04_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s2t05_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s2t06_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s2t07_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s2t08_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s2t09_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s2t10_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s2t11_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s2t12_vbr.mp3&quot;},{&quot;url&quot;:&quot;mmj2008-12-31/mmj2008-12-31s2t13_vbr.mp3&quot;}],&quot;showPlayListButtons&quot;:true,&quot;usePlayOverlay&quot;:false,&quot;menuItems&quot;:[false,false,false,false,true,true,false],&quot;initialScale&quot;:&quot;scale&quot;,&quot;autoPlay&quot;:false,&quot;autoBuffering&quot;:false,&quot;showMenu&quot;:false,&quot;showMuteVolumeButton&quot;:true,&quot;showFullScreenButton&quot;:false}" height="28px" width="350px"> </embed></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Understanding JavaScript Closures]]></title>
    <link href="http://jessecravens.com/blog/2008/04/09/understanding-javascript-closures/"/>
    <updated>2008-04-09T22:37:05-05:00</updated>
    <id>http://jessecravens.com/blog/2008/04/09/understanding-javascript-closures</id>
    <content type="html"><![CDATA[<p>So it took me awhile to truly understand JavaScript closures. There is limited documentation of the subject on the web, but here is a list of the resources I used to finally grasp not only what specifically creates a closure, but also why we would want to use them.</p>




<ul>
<li><a href="http://books.google.com/books?id=VOS6IlCsuU4C&dq=javascript">JavaScript: the Definitive Guide</a></li>
<li><a href="http://www.crockford.com/javascript/private.html">Douglas Crockford: Private Members in JavaScript</a></li>
<li><a href="http://blog.morrisjohns.com/javascript_closures_for_dummies">JavaScript Closures for Dummies</a></li>
<li><a href="http://www.jibbering.com/faq/faq_notes/closures.html">jibbering.com/faq/faq_notes/closures.html</a></li>
</ul>




<p>First, let&#8217;s define closures:</p>


<ul>
<li>A &#8220;closure&#8221; is an expression (typically a function) that can have free variables together with an environment that binds those variables (that &#8220;closes&#8221; the expression). - Jim Ley </li>
<li>&#8230;JavaScript has closures. What this means is that an inner function always has access to the vars and parameters of its outer function, even after the outer function has returned. This is an extremely powerful property of the language. - Douglas Crockford</li>
<li>Things are different if you save a reference to the nested function in the global scope. You do so by using the nested function as the return value of the outer function or by storing the nested function as a property of some other object. - JavaScript: the Definitive Guide</li>
<li>Simply put, a closure is a variable, created inside a function, which continues to exist after the function has finished executing. - Patrick Hunlock</li>
</ul>




<p>I should preface the more detailed explanation below with a few prerequisite concepts. If you don&#8217;t truly grasp these concepts, then you may get hung up when trying to understand JavaScript closures. Fortunately, your quest to understand closures should force you to understand these concepts on a deeper level first.</p>




<ul>
<li>global object and global scope</li>
<li>reference types and primitive types</li>
<li>lexical scope and the scope chain</li>
<li>the call object or the ECMA activation object</li>
<li>idea of persistent data</li>
<li>private variables</li>
<li>using return</li>
</ul>




<p>To begin, we want to create a reusable function containing data that persists across invocations.</p>


<p>We don&#8217;t want to hard code variables into the reusable function, and a local variable will not persist.</p>


<p>From what we have learned by our <a href="#">&#8216;Responsible JavaScript for the Enterprise&#8217;</a> guidelines and through our understanding of the call object, lexical scope, and namespacing: we also know that we want to greatly limit global variables in our global scope.</p>




<p>So instead, we want the developer to make two calls: One, to set up or &#8216;configure&#8217; the function, and two, to invoke this &#8216;pre-configured&#8217; function.</p>


<p>The power is in the first call. I like to refer to it as the configuration call. </p>


<p>During the configuration call, we &#8216;freeze&#8217; the inner function by setting a reference to it in the global scope.</p>


<p>So this data persists. Why?</p>


<p>We have an external reference to this inner function.</p>


<p>The inner nested function retains its reference to the call object of the outer function.</p>


<p>The outer function&#8217;s local scope resolves and the reference to its inner function remains.</p>


<p></p>


<p></p>




<p>This is an example from a <a href="http://www.synthesispraxis.com/">friend</a> that helped me finally wrap my head around the power of the technique.</p>


<p>{syntaxhighlighter brush: js; ruler: true; first-line: 1}
function configEquation(A,B,C){
  //The equation: Ax<sup>ex1</sup> + Bx<sup>ex2</sup> + Cx<sup>ex3</sup>
  //The exponents are ex1, ex2, and ex3
  //The coefficients are A, B, and C and are set</p>

<p>  var ex1 = 2;
  var ex2 = 1;
  var ex3 = 0;</p>

<p>//The exponents constitute a quadratic equation.
function theEquation(x){</p>

<pre><code>var result = A * Math.pow(x,ex1) + B * Math.pow(x,ex2) + C * Math.pow(x,ex3);
return result; 
</code></pre>

<p>  }</p>

<pre><code>return theEquation; //notice we return the reference not the invocation of the function(no params)
</code></pre>

<p>  }</p>

<p>var myEquation = configEquation(2,3,0); //the configuration call
  console.log(&#8216;myEquation, x = 2: &#8217; + myEquation(2));
  console.log(&#8216;myEquation, x = 5: &#8217; + myEquation(5));</p>

<p>var myEquation2 = configEquation(1,1,1); //a 2nd configuration call
  console.log(&#8216;myEquation2, x = 2: &#8217; + myEquation2(2));
  console.log(&#8216;myEquation2, x = 5: &#8217; + myEquation2(5));
{/syntaxhighlighter}</p>
]]></content>
  </entry>
  
</feed>
