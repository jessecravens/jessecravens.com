<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: CSS | Jesse Cravens]]></title>
  <link href="http://jessecravens.com/blog/categories/css/atom.xml" rel="self"/>
  <link href="http://jessecravens.com/"/>
  <updated>2012-10-15T21:09:42-05:00</updated>
  <id>http://jessecravens.com/</id>
  <author>
    <name><![CDATA[Jesse Cravens]]></name>
    <email><![CDATA[jesse.cravens@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hack #99: Using Stylus’ Transparent Mixins to Hack Vendor-Specific Properties]]></title>
    <link href="http://jessecravens.com/blog/2012/04/22/hack-99-using-stylus-transparent-mixins-to-hack-vendor-specific-properties/"/>
    <updated>2012-04-22T19:11:35-05:00</updated>
    <id>http://jessecravens.com/blog/2012/04/22/hack-99-using-stylus-transparent-mixins-to-hack-vendor-specific-properties</id>
    <content type="html"><![CDATA[<div class="">

<p>This post is mirrored at: <a href="http://html5hacks.com/hack/web-workers/hack-82-web-wokers-basics-web-browsers-ui-thread">html5hacks.com</a></p>


<p>One of the most interesting features of <a href="https://github.com/LearnBoost/stylus">Stylus</a> is transparent Mixins. One reason they are interesting is that at the time of this writing, this feature is exclusive to Stylus, other CSS metalanguages like Less and Sass do not offer Transparent Mixin support. </p></p>

<p>We already defined a mixin earlier, when we explored mixins with Jade. Here they are used similarly.</p>

<p>Before we begin with the transparent aspect of Stylus mixin support, let’s build a simple CSS mixin. Perhaps, the best example, as provided by TJ Holowaychuk in this beginner screencast: http://www.screenr.com/bNY uses vendor-specific prefixes. </p>

<p>How about we take his example and expand it to a slightly more challenging scenario. </p>

<p>In case you haven’t come across this challenge before, lets set some context. Browser makers, or vendors, implement proprietary extensions to standard CSS specifications to release and test browser features that have been developed pre ‘Candidate Recommendation’ W3C draft status. Although vendor-specific prefixes can be frustrating for web developers, they are a necessary evil, allowing new properties to be widely tested before they become available as standard CSS properties.</p>

<p>Each Vendor maintains a list of their proprietary CSS properties. The following table provides the extension prefixes for all the modern browsers:</p>

<p>Extension Rendering Engine Browser(s) Example -moz- Mozilla Firefox, Camino -moz-border-radius -ms- Trident Internet Explorer -ms-layout-grid -o- Presto Opera -o-border-radius -webkit- Webkit Chrome, Safari -webkit-border-radius</p>

<table border="1">
<tr>
<th>Extension</th>
<th>Rendering Engine</th>
<th>Browser(s)</th>
<th>Example</th>
</tr>
<tr>
<td>-moz-</td>
<td>Camino</td>
<td>Mozilla Firefox</td>
<td>-moz-border-radius</td>
</tr>
<tr>
<td>-ms-</td>
<td>Trident</td>
<td>Internet Explorer</td>
<td>-ms-layout-grid</td>
</tr>
<tr>
<td>-o-</td>
<td>Presto</td>
<td>Opera</td>
<td>-o-border-radius</td>
</tr>
<tr>
<td>-webkit-</td>
<td>Webkit</td>
<td>Chrome, Safari</td>
<td>-webkit-border-radius</td>
</tr>
</table>

<p>And here is a few valuable resources for finding these properties.</p>
<ul>
<li>Webkit (unofficial at css-infos.net) : http://css-infos.net/properties/webkit</li> 

<li>Safari: http://developer.apple.com/library/safari/#documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-SW1</li>

<li>Mozilla: https://developer.mozilla.org/en/CSS_Reference/Mozilla_Extensions</li>

<li>Opera: http://www.opera.com/docs/specs/presto28/css/o-vendor/</li>

<li>Internet Explorer: http://blogs.msdn.com/b/ie/archive/2008/09/08/microsoft-css-vendor-extensions.aspx</li>
</ul>

<p>Without a metalanguage that provides logic to CSS, these declarations can become cumbersome and repetitive. Here is an example of a div element that needs to have corners take on different size radiuses:</p>

<p>First, the markup in Jade.</p>

<pre class="brush: html; ruler: true; first-line: 1; highlight: [0]">
header
  h1= title
  p Welcome to #{title}

div.panel panel test
div.mixin-panel mixin-panel test
div.t-mixin-panel transparent-mixin-panel test
</pre>

<p>Then, the styles in basic CSS.</p>


<pre class="brush: css; ruler: true; first-line: 1; highlight: [0]">
div.panel {
  -moz-border-radius: 10px 5px;
  -webkit-border-radius: 10px 5px;
  border-radius: 10px 5px;
}
</pre>

<p>This produces the following effect:</p>

<p>
<img src="http://html5hacks.com/sites/default/files/images/stylus-example265x185.png"/>
</p>

<p> With that context in mind, let’s leverage Stylus to help us manage our code. First, we are able to remove all parenthesis, semi-colons, and colons. </p>

<pre class="brush: css; ruler: true; first-line: 1; highlight: [0]">
div.panel
  -moz-border-radius 10px 5px
  -webkit-border-radius 10px 5px
  border-radius 10px 5px
</pre>

<p>Much like Jade, this simplified syntax goes along way in our ability to quickly write CSS. Now, let’s apply some logic, by creating a border-radius mixin, and pass our values as arguments to our mixin:</p>

<pre class="brush: css; ruler: true; first-line: 1; highlight: [0]">
my-border-radius-mixin (...args)
  -moz-border-radius args
  -webkit-border-radius args
  border-radius args

div.panel
  my-border-radius-mixin (10px 5px)

</pre>

<p>And we can reuse this mixin in other contexts, which continues to help reduce code bloat and keep your code DRY. </p>

<pre class="brush: css; ruler: true; first-line: 1; highlight: [0]">
my-border-radius-mixin (...args)
  -moz-border-radius args
  -webkit-border-radius args
  border-radius args

div.panel
  border-radius-mixin (10px 5px)

div.other-panel
  border-radius-mixin (3px 32px 100px 55px)

div.another-panel
  my-border-radius-mixin (5px 10px 33px 43px)

</pre>

<p> While Stylus allows us to name our mixin as we choose, we are also given the ability to apply mixins ‘transparently.’ In the case of a simple implementation of border-radius, a transparent mixin would make a lot of sense. In effect, this normalizes browser implementations and provides an abstraction layer for CSS developers. </p>

<pre class="brush: css; ruler: true; first-line: 1; highlight: [0]">
border-radius (...args)
  -moz-border-radius args
  -webkit-border-radius args
  border-radius args

div.panel
  border-radius 10px 5px

</pre>

<p>As long as a border-radius mixin is present, Stylus will find it, and apply the vendor-specific properties transparently. </p>

</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[One great CSS resource]]></title>
    <link href="http://jessecravens.com/blog/2006/09/26/one-great-css-resource/"/>
    <updated>2006-09-26T16:34:31-05:00</updated>
    <id>http://jessecravens.com/blog/2006/09/26/one-great-css-resource</id>
    <content type="html"><![CDATA[<p><a href="http://www.alistapart.com/articles/12lessonsCSSandstandards">A List Apart: Articles: 12 Lessons for Those Afraid of CSS and Standards</a><br /><br />A great resource for anyone interested in CSS. I tell you what, it makes me feel alot better about all of my struggles with what Ben refers to as whack-a-mole rendering bugs and stylesheet hacks.<br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS3.info and some Firefox extensions]]></title>
    <link href="http://jessecravens.com/blog/2006/06/13/css3-info-and-some-firefox-extensions/"/>
    <updated>2006-06-13T02:44:49-05:00</updated>
    <id>http://jessecravens.com/blog/2006/06/13/css3-info-and-some-firefox-extensions</id>
    <content type="html"><![CDATA[<p>If you haven't been keeping up with the latest in CSS. <a href="http://www.css3.info">Here is a site dedicated to doing it for you.</a></p>

<p>Also today I tried out a few new Firefox extensions. All of which I think I will keep activated:
<a href="https://addons.mozilla.org/firefox/1368/">Colorful Tabs</a>
<a href="https://addons.mozilla.org/firefox/1327/">Grocery List Generator</a>
<a href="https://addons.mozilla.org/firefox/2587/">Bibirmer Toolbar</a>
<a href="https://addons.mozilla.org/firefox/2372/">GCalQuickTab</a>
<a href="https://addons.mozilla.org/firefox/1768/">TabSidebar</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web Development Cheat Sheets]]></title>
    <link href="http://jessecravens.com/blog/2006/05/23/web-development-cheat-sheets/"/>
    <updated>2006-05-23T15:00:22-05:00</updated>
    <id>http://jessecravens.com/blog/2006/05/23/web-development-cheat-sheets</id>
    <content type="html"><![CDATA[<p>Dave Child has posted a number of Web development related <a href="http://www.ilovejackdaniels.com/cheat-sheets/">cheat sheets</a> in .pdf and .png format on his blog. These include CSS, xHTML, JavaScript, Ruby on Rails, PHP, and MySQL.</p>

<p>Thanks Dave!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[In search of a better photo gallery]]></title>
    <link href="http://jessecravens.com/blog/2006/03/31/in-search-of-a-better-photo-gallery/"/>
    <updated>2006-03-31T18:30:06-06:00</updated>
    <id>http://jessecravens.com/blog/2006/03/31/in-search-of-a-better-photo-gallery</id>
    <content type="html"><![CDATA[<p>So digg and reddit have both posted on the work of Stu Nichols and his pure CSS photo gallery. Check it out: <a href="http://www.cssplay.co.uk/menu/lightbox.html#Trees">here</a>. I'm anxious to try it out. I'd like to find a way to blend this image gallery with a liquid three column layout, but the gallery is fixed - so it may have to be implemented on an internal page. Although, it would be interesting to have this image gallery present on a home page - since before the hover it only takes up the room of a horizontal menu. I'll be exploring this idea further - stay tuned.</p>
]]></content>
  </entry>
  
</feed>
